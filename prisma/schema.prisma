generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["employees"]
}

model department {
  id                  String                @id(map: "idx_16979_primary") @db.Char(4)
  dept_name           String                @unique(map: "idx_16979_dept_name") @db.VarChar(40)
  department_employee department_employee[]
  department_manager  department_manager[]

  @@schema("employees")
}

model department_employee {
  employee_id   BigInt
  department_id String     @db.Char(4)
  from_date     DateTime   @db.Date
  to_date       DateTime   @db.Date
  employee      employee   @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "dept_emp_ibfk_1")
  department    department @relation(fields: [department_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "dept_emp_ibfk_2")

  @@id([employee_id, department_id], map: "idx_16982_primary")
  @@index([department_id], map: "idx_16982_dept_no")
  @@schema("employees")
}

model department_manager {
  employee_id   BigInt
  department_id String     @db.Char(4)
  from_date     DateTime   @db.Date
  to_date       DateTime   @db.Date
  employee      employee   @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "dept_manager_ibfk_1")
  department    department @relation(fields: [department_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "dept_manager_ibfk_2")

  @@id([employee_id, department_id], map: "idx_16985_primary")
  @@index([department_id], map: "idx_16985_dept_no")
  @@schema("employees")
}

model employee {
  id                  BigInt                @id(map: "idx_16988_primary") @default(autoincrement())
  birth_date          DateTime              @db.Date
  first_name          String                @db.VarChar(14)
  last_name           String                @db.VarChar(16)
  gender              employee_gender
  hire_date           DateTime              @db.Date
  department_employee department_employee[]
  department_manager  department_manager[]
  salary              salary[]
  title               title[]

  @@schema("employees")
}

model salary {
  employee_id BigInt
  amount      BigInt
  from_date   DateTime @db.Date
  to_date     DateTime @db.Date
  employee    employee @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "salaries_ibfk_1")

  @@id([employee_id, from_date], map: "idx_16991_primary")
  @@schema("employees")
}

model title {
  employee_id BigInt
  title       String    @db.VarChar(50)
  from_date   DateTime  @db.Date
  to_date     DateTime? @db.Date
  employee    employee  @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "titles_ibfk_1")

  @@id([employee_id, title, from_date], map: "idx_16994_primary")
  @@schema("employees")
}

enum employee_gender {
  M
  F

  @@schema("employees")
}
